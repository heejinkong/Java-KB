

plugins {
  id 'java'
  id 'war'
}


group 'com.multi'
version '1.0-SNAPSHOT'


repositories {
  mavenCentral()
}


ext {
  junitVersion = '5.9.2'
  springVersion = '5.3.37'
}


sourceCompatibility = '17'
targetCompatibility = '17'


tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}


dependencies {
  // 스프링
  implementation 'org.springframework:spring-core:5.3.37'
  implementation "org.springframework:spring-context:5.3.37"
  implementation "org.springframework:spring-webmvc:5.3.37"
  implementation 'javax.inject:javax.inject:1'
  implementation 'org.springframework:spring-web:5.3.37'
  implementation 'org.springframework:spring-jdbc:5.3.37'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2' // Jackson 라이브러리 추가
  implementation 'com.googlecode.json-simple:json-simple:1.1.1'

  //mybatis
  implementation 'org.mybatis:mybatis:3.5.10'
  implementation 'org.mybatis:mybatis-spring:2.0.7'
  runtimeOnly 'mysql:mysql-connector-java:8.0.26'
  implementation 'org.apache.commons:commons-dbcp2:2.9.0'

  // AOP
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // JSP, SERVLET, JSTL
  implementation('javax.servlet:javax.servlet-api:4.0.1')
  compileOnly 'javax.servlet.jsp:jsp-api:2.1'
  implementation 'javax.servlet:jstl:1.2'

  // Logging
  implementation 'org.slf4j:slf4j-api:1.7.32'
  runtimeOnly 'org.slf4j:jcl-over-slf4j:1.7.32'
  runtimeOnly 'org.slf4j:slf4j-log4j12:1.7.32'

  // Logback Classic
  implementation 'ch.qos.logback:logback-classic:1.2.11'
  implementation 'ch.qos.logback:logback-core:1.2.11'

  implementation 'commons-logging:commons-logging:1.2'

  // xml내 한글 처리
  implementation 'xerces:xercesImpl:2.12.2'

  compileOnly 'org.projectlombok:lombok:1.18.28'
  annotationProcessor 'org.projectlombok:lombok:1.18.28'


  testImplementation "org.springframework:spring-test:${springVersion}"
  testCompileOnly 'org.projectlombok:lombok:1.18.28'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}


test {
  useJUnitPlatform()
}



